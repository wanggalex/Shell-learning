grep :
    who | grep -F austen
    who | grep austen
    查找固定的字符串，只要匹配的模式中没有含有正则表达式的meta字符，则grep的行为模式就等同于使用了-F
    
    其中：
    - i 模式匹配时忽略字母大小写的差异
    - v 显示不匹配模式的行
    
    正则表达：
      ^abc  :以abc开头
      abc$  :以abc结尾
      .     :任意的单个字符,但null除外
      *     :匹配任意字符的任意长度
      \{n,m\} :重现n至m次   跟{n, m}是一样的
      +       :匹配前面正则表达式的一个或者多个实例
      ？      :匹配前面正则表达式的零个或者是一个实例
      。。。。。。。。other ruls。。。。。。。。
sed:
    sed 's/Today/Campus' < example.txt
    sed 's/Today/Campus/g' < example.txt
    在命令中以g结尾表示的是全局性（global）,会替代文本中正则表达的每一个匹配，如果没有设置g,那么sed只会取代第一个匹配的
    而且，可以在结尾处指定数字，指示第n个匹配时才要替换，
    sed  's/Today/Campus' < example.txt
    
    sed的运作原理：
       sed读取参数中的每一个文件，一次读取一行，将读到的行放到内存的一个区域，称之为模式空间（pattern space）,这就相当于是
       程序里的变量一样，内存的一个区域在编辑命令的指示下可以修改，所有编辑上的操作都会应用到模式空间的内容，当所有操作完成后，
       sed会将模式空间的最后内容打印到标准的输出，再回到开始处，读取另一个输入行。
       
      可指定行的范围，仅需将地址以逗号隔开：
         sed -n '10,42p' foo.xml                 仅打印10-42的行
         sed '/foo/,/bar/ s/bar/quux/g'          仅替换范围内的行
         
